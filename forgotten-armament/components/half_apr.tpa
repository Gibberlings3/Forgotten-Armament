// Forgotten Armament - Add Half APR Increase for Specialization in Two-Handed Weapons

COPY ~forgotten-armament/eff/halfapr/MO2HAPR.EFF~ ~override/MO2HAPR.EFF~

ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
	STRING_SET ~34171~ @101 // 2H Weapon Style
END ELSE ACTION_IF GAME_IS ~bgee~ BEGIN
	STRING_SET ~25044~ @101 // 2H Weapon Style
END

/*
PATCH_IF item_type BEGIN
    READ_LONG   0x64 abil_off
    READ_SHORT  0x68 abil_num
    SET inserted = 0
    SET new_fx = 0
    FOR (index = 0 ; index < abil_num ; ++index) BEGIN
      PATCH_IF inserted BEGIN 
        WRITE_SHORT (abil_off + 0x20 + (index * 0x38)) (THIS + new_fx) // if already inserted, just correct the effect index
      END ELSE BEGIN
        READ_BYTE (abil_off +        (index * 0x38)) type
        PATCH_IF type = 4 BEGIN // insert before first launcher type
          READ_SHORT (abil_off + 0x1e + (index * 0x38)) abil_fx_num
          READ_SHORT (abil_off + 0x20 + (index * 0x38)) abil_fx_idx
          SET abil_num += 1
          SET inserted = 1
          SET new_fx = abil_fx_num + imported_fx_num
          PATCH_IF (index < 2) BEGIN // for adjusting tooltip
            DEFINE_ASSOCIATIVE_ARRAY cd_abil_table BEGIN "%SOURCE_RES%","%name%","%index%" => 0 END
          END  
          PATCH_IF new_fx BEGIN // if we also clone existing effects
            READ_LONG 0x6a fx_off
            PATCH_IF abil_fx_num BEGIN // if we also need to clone existing effects
              READ_ASCII   (fx_off + (abil_fx_idx * 0x30)) effects (abil_fx_num * 0x30)
              INSERT_BYTES (fx_off + (abil_fx_idx * 0x30)) (abil_fx_num * 0x30) // create new effect(s)
              WRITE_ASCIIE (fx_off + (abil_fx_idx * 0x30)) "%effects%"          // write in info
            END    
            PATCH_IF imported_fx_num BEGIN // if we also clone existing effects
              INSERT_BYTES (fx_off + (abil_fx_idx * 0x30)) (imported_fx_num * 0x30) // create new effect(s)
              WRITE_ASCIIE (fx_off + (abil_fx_idx * 0x30)) "%imported_effects%"     // write in info
            END     
          END   
          INSERT_BYTES (abil_off +        (index * 0x38)) 0x38        // create new ability
          WRITE_ASCIIE (abil_off +        (index * 0x38)) "%ability%" // write in info
          WRITE_BYTE   (abil_off + 0x10 + (index * 0x38)) 0           // no launcher required
          WRITE_SHORT  (abil_off + 0x1e + (index * 0x38)) new_fx      // combine existing + imported effects
          WRITE_SHORT  (abil_off + 0x20 + (index * 0x38)) abil_fx_idx // use correct index
          WRITE_SHORT  (abil_off + 0x22 + (index * 0x38)) 0           // no charges             
        END 
      END
    END
    PATCH_IF inserted BEGIN
      WRITE_SHORT 0x68 abil_num
      WRITE_LONG  0x6a (THIS + 0x38)
    END  
  END
  BUT_ONLY
*/